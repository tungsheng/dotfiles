export DOTFILES=$HOME/dotfiles
export ZSH=$DOTFILES/zsh
export ZPLUG=$HOME/.zplug

echo '##################'
echo 'test'
echo '##################'

source $ZPLUG/init.zsh

zplug "mafredri/zsh-async", from:github
zplug "sindresorhus/pure", use:pure.zsh, from:github, as:theme
zplug "zsh-users/zsh-autosuggestions"
zplug "zsh-users/zsh-history-substring-search"
zplug "zsh-users/zsh-syntax-highlighting"
zplug 'zsh-users/zsh-completions'

# Install plugins if there are plugins that have not been installed
if ! zplug check --verbose; then
    printf "Install? [y/N]: "
    if read -q; then
        echo; zplug install
    fi
fi

zplug load --verbose
echo -e "\n"

zstyle ':completion:*:*:git:*' script $DOTFILES/zsh/git-completion.bash
# git completion
fpath=($DOTFILES/zsh/functions $fpath)

# initialize autocomplete
autoload -U compinit add-zsh-hook
compinit

export EDITOR='nvim'

# display how long all tasks over 10 seconds take
export REPORTTIME=5

[[ -e $HOME/.terminfo ]] && export TERMINFO_DIRS=$HOME/.terminfo:/usr/share/terminfo
[ -z "$TMUX" ] && export TERM=xterm-256color-italic

# source all .zsh files inside of the zsh/ directory
for config ($ZSH/**/*.zsh) source $config

# util
. $DOTFILES/util/z.sh

# Add RVM.
PATH=$PATH:$HOME/.rvm/bin # Add RVM to PATH for scripting
[[ -s "$HOME/.rvm/scripts/rvm" ]] && . "$HOME/.rvm/scripts/rvm"

# JAVA_HOME
#export JAVA_HOME=$(/usr/libexec/java_home -v16.0.1)

# Maven
#export PATH="/Users/tlee3/Code/apache-maven-3.8.1/bin:$PATH"



# Add Android paths
# export ANDROID_HOME=$HOME/Android/Sdk
# export PATH=$PATH:$ANDROID_HOME/tools
# export PATH=$PATH:$ANDROID_HOME/tools/bin
# export PATH=$PATH:$ANDROID_HOME/platform-tools

# Add GO related paths
export GOPATH=$HOME/go
export GOROOT=/usr/local/go
export PATH=$GOROOT/bin:$PATH
export PATH=$GOPATH/bin:$PATH

# add flutter path
export FLUTTERPATH=$HOME/flutter
export PATH=$FLUTTERPATH/bin:$PATH

# add android SDK path
# export ANDROID_HOME=/Users/tonylee/Library/Android/sdk
# export PATH=$PATH:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools

# add /usr/local/sbin
if [[ -d /usr/local/sbin ]]; then
    export PATH=/usr/local/sbin:$PATH
fi

export PATH=/usr/local/bin:$PATH

# adding path directory for custom scripts
export PATH=$DOTFILES/bin:$PATH

# check for custom bin directory and add to path
if [[ -d $HOME/bin ]]; then
    export PATH=$HOME/bin:$PATH
fi

# alias git to hub
if hash hub 2>/dev/null; then
    eval "$(hub alias -s)"
fi

# source nvm
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# source fzf
[ -f $HOME/.fzf.zsh ] && source $HOME/.fzf.zsh

export PATH="$HOME/.yarn/bin:$PATH"

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/Users/tonylee/Code/resources/google-cloud-sdk/path.zsh.inc' ]; then source '/Users/tonylee/Code/resources/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/Users/tonylee/Code/resources/google-cloud-sdk/completion.zsh.inc' ]; then source '/Users/tonylee/Code/resources/google-cloud-sdk/completion.zsh.inc'; fi

export RPROMPT=''
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion




# Tetration
tunnels() {
  # echo Closing exising tunnels...
  # lsof -t -i:8090 | xargs kill -9
  # lsof -t -i:4242 | xargs kill -9
  # lsof -t -i:7733 | xargs kill -9
  # lsof -t -i:9196 | xargs kill -9
  # lsof -t -i:9082 | xargs kill -9
  # lsof -t -i:8080 | xargs kill -9
  # lsof -t -i:8087 | xargs kill -9
  # lsof -t -i:38017 | xargs kill -9

  if [ $# -eq 1 ] ; then
    echo Creating tunnels to orch-${1}.tetrationanalytics.com ...
    ssh -N -C -vv -i ~/.ssh/id_rsa_tetter \
    -L 9196:appserver-1:9196 \
    -L 8090:druidHistoricalBroker-1:8090 \
    -L 8889:orchestrator-1:8889 \
    -L 9696:appserver-1:9696 \
    -L 7733:appserver-1:7733 \
    -L 4242:tsdbBosunGrafana-1:4242 \
    -L 8080:happobat-1:8080 \
    -L 8086:happobat-1:8086 \
    -L 9082:adhoc-1:9082 \
    -L 8120:adhoc-1:8120 \
    -L 8087:happobat-1:8087 \
    -L 38017:mongodb-2:27017 \
    -L 8090:druid-broker.service.consul:8090 \
    -L 4242:zk.service.consul:4242 \
    tetter@orch-${1}.tetrationanalytics.com
  fi
}

sync-() {
#  echo Opening tunnels to $1.tetrationanalytics.com...
#  {
#    mdev-t $1
#  } &> /dev/null
  echo Getting scope sync password from orch-$1.tetrationanalytics.com...
  pw_string=$(ssh -i ~/.ssh/id_rsa tetter@orch-${1}.tetrationanalytics.com << EOF
    grep 'backup:' /local/deploy-ansible/playbooks/group_vars/${1}.site
EOF
  )
  pw_string=$(echo $pw_string | cut -d ':' -f 2 | xargs)
  echo Syncing mongodb to with $1.tetrationanalytics.com...
  echo rake db:scope:dev_sync[$pw_string]
  rake db:scope:dev_sync[$pw_string]
}

syncPlease() {
  echo Getting scope sync password from $1...
  pw_string=$(ssh tetter@orch-${1}.tetrationanalytics.com << EOF
    grep 'backup:' /local/deploy-ansible/playbooks/group_vars/${1}.site
EOF
  )
 pw_string=$(echo $pw_string | cut -d ':' -f 2 | xargs)
 bin/rake db:scope:dev_sync\[$pw_string\] # remove backslashes if not in zsh
}






















[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
